//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "e4cdfeeca7101ce0")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.2")]

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1061 with alias "metaDataControls"
	/// <summary>Meta Data Controls</summary>
	public partial interface IMetaDataControls : IPublishedContent
	{
		/// <summary>Meta Description</summary>
		string MetaDescription { get; }

		/// <summary>Meta Keywords</summary>
		IEnumerable<string> MetaKeywords { get; }

		/// <summary>Meta Name</summary>
		string MetaName { get; }
	}

	/// <summary>Meta Data Controls</summary>
	[PublishedContentModel("metaDataControls")]
	public partial class MetaDataControls : PublishedContentModel, IMetaDataControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "metaDataControls";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MetaDataControls(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MetaDataControls, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Meta Description
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return GetMetaDescription(this); }
		}

		/// <summary>Static getter for Meta Description</summary>
		public static string GetMetaDescription(IMetaDataControls that) { return that.GetPropertyValue<string>("metaDescription"); }

		///<summary>
		/// Meta Keywords
		///</summary>
		[ImplementPropertyType("metaKeywords")]
		public IEnumerable<string> MetaKeywords
		{
			get { return GetMetaKeywords(this); }
		}

		/// <summary>Static getter for Meta Keywords</summary>
		public static IEnumerable<string> GetMetaKeywords(IMetaDataControls that) { return that.GetPropertyValue<IEnumerable<string>>("metaKeywords"); }

		///<summary>
		/// Meta Name
		///</summary>
		[ImplementPropertyType("metaName")]
		public string MetaName
		{
			get { return GetMetaName(this); }
		}

		/// <summary>Static getter for Meta Name</summary>
		public static string GetMetaName(IMetaDataControls that) { return that.GetPropertyValue<string>("metaName"); }
	}

	/// <summary>Navigation Controls</summary>
	[PublishedContentModel("navigationControls")]
	public partial class NavigationControls : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "navigationControls";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public NavigationControls(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<NavigationControls, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Menu Items
		///</summary>
		[ImplementPropertyType("menuItems")]
		public Umbraco.Web.Models.RelatedLinks MenuItems
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("menuItems"); }
		}
	}

	// Mixin content Type 1064 with alias "footerControls"
	/// <summary>Footer Controls</summary>
	public partial interface IFooterControls : IPublishedContent
	{
		/// <summary>Footer Awards</summary>
		IEnumerable<IPublishedContent> FooterAwards { get; }

		/// <summary>Footer Left Links</summary>
		Umbraco.Web.Models.RelatedLinks FooterLeftLinks { get; }

		/// <summary>Footer Right Links</summary>
		Umbraco.Web.Models.RelatedLinks FooterRightLinks { get; }

		/// <summary>Footer Social Links</summary>
		Umbraco.Web.Models.RelatedLinks FooterSocialLinks { get; }

		/// <summary>Footer Title</summary>
		string FooterTitle { get; }
	}

	/// <summary>Footer Controls</summary>
	[PublishedContentModel("footerControls")]
	public partial class FooterControls : PublishedContentModel, IFooterControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "footerControls";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FooterControls(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FooterControls, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Footer Awards
		///</summary>
		[ImplementPropertyType("footerAwards")]
		public IEnumerable<IPublishedContent> FooterAwards
		{
			get { return GetFooterAwards(this); }
		}

		/// <summary>Static getter for Footer Awards</summary>
		public static IEnumerable<IPublishedContent> GetFooterAwards(IFooterControls that) { return that.GetPropertyValue<IEnumerable<IPublishedContent>>("footerAwards"); }

		///<summary>
		/// Footer Left Links: Footer Left Links
		///</summary>
		[ImplementPropertyType("footerLeftLinks")]
		public Umbraco.Web.Models.RelatedLinks FooterLeftLinks
		{
			get { return GetFooterLeftLinks(this); }
		}

		/// <summary>Static getter for Footer Left Links</summary>
		public static Umbraco.Web.Models.RelatedLinks GetFooterLeftLinks(IFooterControls that) { return that.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("footerLeftLinks"); }

		///<summary>
		/// Footer Right Links
		///</summary>
		[ImplementPropertyType("footerRightLinks")]
		public Umbraco.Web.Models.RelatedLinks FooterRightLinks
		{
			get { return GetFooterRightLinks(this); }
		}

		/// <summary>Static getter for Footer Right Links</summary>
		public static Umbraco.Web.Models.RelatedLinks GetFooterRightLinks(IFooterControls that) { return that.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("footerRightLinks"); }

		///<summary>
		/// Footer Social Links
		///</summary>
		[ImplementPropertyType("footerSocialLinks")]
		public Umbraco.Web.Models.RelatedLinks FooterSocialLinks
		{
			get { return GetFooterSocialLinks(this); }
		}

		/// <summary>Static getter for Footer Social Links</summary>
		public static Umbraco.Web.Models.RelatedLinks GetFooterSocialLinks(IFooterControls that) { return that.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("footerSocialLinks"); }

		///<summary>
		/// Footer Title
		///</summary>
		[ImplementPropertyType("footerTitle")]
		public string FooterTitle
		{
			get { return GetFooterTitle(this); }
		}

		/// <summary>Static getter for Footer Title</summary>
		public static string GetFooterTitle(IFooterControls that) { return that.GetPropertyValue<string>("footerTitle"); }
	}

	/// <summary>Home</summary>
	[PublishedContentModel("home")]
	public partial class Home : PublishedContentModel, ICarouselControls, IFooterControls, IMetaDataControls, IPageLevelControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "home";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Home(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Home, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Home Boxes
		///</summary>
		[ImplementPropertyType("homeBoxes")]
		public IEnumerable<IPublishedContent> HomeBoxes
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("homeBoxes"); }
		}

		///<summary>
		/// Logo: Logo of site
		///</summary>
		[ImplementPropertyType("logo")]
		public IPublishedContent Logo
		{
			get { return this.GetPropertyValue<IPublishedContent>("logo"); }
		}

		///<summary>
		/// Main Carousel
		///</summary>
		[ImplementPropertyType("mainCarousel")]
		public IEnumerable<IPublishedContent> MainCarousel
		{
			get { return Umbraco.Web.PublishedContentModels.CarouselControls.GetMainCarousel(this); }
		}

		///<summary>
		/// Footer Awards
		///</summary>
		[ImplementPropertyType("footerAwards")]
		public IEnumerable<IPublishedContent> FooterAwards
		{
			get { return Umbraco.Web.PublishedContentModels.FooterControls.GetFooterAwards(this); }
		}

		///<summary>
		/// Footer Left Links: Footer Left Links
		///</summary>
		[ImplementPropertyType("footerLeftLinks")]
		public Umbraco.Web.Models.RelatedLinks FooterLeftLinks
		{
			get { return Umbraco.Web.PublishedContentModels.FooterControls.GetFooterLeftLinks(this); }
		}

		///<summary>
		/// Footer Right Links
		///</summary>
		[ImplementPropertyType("footerRightLinks")]
		public Umbraco.Web.Models.RelatedLinks FooterRightLinks
		{
			get { return Umbraco.Web.PublishedContentModels.FooterControls.GetFooterRightLinks(this); }
		}

		///<summary>
		/// Footer Social Links
		///</summary>
		[ImplementPropertyType("footerSocialLinks")]
		public Umbraco.Web.Models.RelatedLinks FooterSocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.FooterControls.GetFooterSocialLinks(this); }
		}

		///<summary>
		/// Footer Title
		///</summary>
		[ImplementPropertyType("footerTitle")]
		public string FooterTitle
		{
			get { return Umbraco.Web.PublishedContentModels.FooterControls.GetFooterTitle(this); }
		}

		///<summary>
		/// Meta Description
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.MetaDataControls.GetMetaDescription(this); }
		}

		///<summary>
		/// Meta Keywords
		///</summary>
		[ImplementPropertyType("metaKeywords")]
		public IEnumerable<string> MetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.MetaDataControls.GetMetaKeywords(this); }
		}

		///<summary>
		/// Meta Name
		///</summary>
		[ImplementPropertyType("metaName")]
		public string MetaName
		{
			get { return Umbraco.Web.PublishedContentModels.MetaDataControls.GetMetaName(this); }
		}

		///<summary>
		/// Page heading
		///</summary>
		[ImplementPropertyType("pageHeading")]
		public string PageHeading
		{
			get { return Umbraco.Web.PublishedContentModels.PageLevelControls.GetPageHeading(this); }
		}
	}

	/// <summary>HomePage Box</summary>
	[PublishedContentModel("homePageBox")]
	public partial class HomePageBox : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "homePageBox";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HomePageBox(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HomePageBox, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Body
		///</summary>
		[ImplementPropertyType("body")]
		public string Body
		{
			get { return this.GetPropertyValue<string>("body"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("heading")]
		public string Heading
		{
			get { return this.GetPropertyValue<string>("heading"); }
		}

		///<summary>
		/// Rollover Image
		///</summary>
		[ImplementPropertyType("rolloverImage")]
		public IPublishedContent RolloverImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("rolloverImage"); }
		}

		///<summary>
		/// Sub Heading
		///</summary>
		[ImplementPropertyType("subHeading")]
		public string SubHeading
		{
			get { return this.GetPropertyValue<string>("subHeading"); }
		}
	}

	/// <summary>Award Item</summary>
	[PublishedContentModel("awardItem")]
	public partial class AwardItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "awardItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public AwardItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<AwardItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>TextPage</summary>
	[PublishedContentModel("textPage")]
	public partial class TextPage : PublishedContentModel, IPageLevelControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "textPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TextPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TextPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Main Text
		///</summary>
		[ImplementPropertyType("mainText")]
		public Newtonsoft.Json.Linq.JToken MainText
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("mainText"); }
		}

		///<summary>
		/// Section Heading
		///</summary>
		[ImplementPropertyType("sectionHeading")]
		public string SectionHeading
		{
			get { return this.GetPropertyValue<string>("sectionHeading"); }
		}

		///<summary>
		/// Sub Heading
		///</summary>
		[ImplementPropertyType("subHeading")]
		public string SubHeading
		{
			get { return this.GetPropertyValue<string>("subHeading"); }
		}

		///<summary>
		/// Page heading
		///</summary>
		[ImplementPropertyType("pageHeading")]
		public string PageHeading
		{
			get { return Umbraco.Web.PublishedContentModels.PageLevelControls.GetPageHeading(this); }
		}
	}

	// Mixin content Type 1090 with alias "pageLevelControls"
	/// <summary>Page Level Controls</summary>
	public partial interface IPageLevelControls : IPublishedContent
	{
		/// <summary>Page heading</summary>
		string PageHeading { get; }
	}

	/// <summary>Page Level Controls</summary>
	[PublishedContentModel("pageLevelControls")]
	public partial class PageLevelControls : PublishedContentModel, IPageLevelControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "pageLevelControls";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PageLevelControls(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PageLevelControls, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page heading
		///</summary>
		[ImplementPropertyType("pageHeading")]
		public string PageHeading
		{
			get { return GetPageHeading(this); }
		}

		/// <summary>Static getter for Page heading</summary>
		public static string GetPageHeading(IPageLevelControls that) { return that.GetPropertyValue<string>("pageHeading"); }
	}

	/// <summary>Offers List</summary>
	[PublishedContentModel("offersList")]
	public partial class OffersList : PublishedContentModel, IPageLevelControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "offersList";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public OffersList(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<OffersList, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Intro Text
		///</summary>
		[ImplementPropertyType("introText")]
		public string IntroText
		{
			get { return this.GetPropertyValue<string>("introText"); }
		}

		///<summary>
		/// Page heading
		///</summary>
		[ImplementPropertyType("pageHeading")]
		public string PageHeading
		{
			get { return Umbraco.Web.PublishedContentModels.PageLevelControls.GetPageHeading(this); }
		}
	}

	/// <summary>Offer Item</summary>
	[PublishedContentModel("offerItem")]
	public partial class OfferItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "offerItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public OfferItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<OfferItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Book Online Link: Book online link
		///</summary>
		[ImplementPropertyType("bookOnlineLink")]
		public string BookOnlineLink
		{
			get { return this.GetPropertyValue<string>("bookOnlineLink"); }
		}

		///<summary>
		/// Main Text: Main text
		///</summary>
		[ImplementPropertyType("mainText")]
		public Newtonsoft.Json.Linq.JToken MainText
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("mainText"); }
		}

		///<summary>
		/// Offer Summary: Offer summary text used on Offers list page
		///</summary>
		[ImplementPropertyType("offerSummary")]
		public IHtmlString OfferSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("offerSummary"); }
		}

		///<summary>
		/// Section Heading: Section heading
		///</summary>
		[ImplementPropertyType("sectionHeading")]
		public string SectionHeading
		{
			get { return this.GetPropertyValue<string>("sectionHeading"); }
		}

		///<summary>
		/// Sub Heading: Sub heading
		///</summary>
		[ImplementPropertyType("subHeading")]
		public string SubHeading
		{
			get { return this.GetPropertyValue<string>("subHeading"); }
		}

		///<summary>
		/// "What's included" Text: "What's included" text
		///</summary>
		[ImplementPropertyType("whatsIncludedText")]
		public Newtonsoft.Json.Linq.JToken WhatsIncludedText
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("whatsIncludedText"); }
		}
	}

	// Mixin content Type 1124 with alias "slideTitle"
	/// <summary>Slide Title</summary>
	public partial interface ISlideTitle : IPublishedContent
	{
		/// <summary>Carousel Slide Title</summary>
		string CarouselSlideTitle { get; }
	}

	/// <summary>Slide Title</summary>
	[PublishedContentModel("slideTitle")]
	public partial class SlideTitle : PublishedContentModel, ISlideTitle
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "slideTitle";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SlideTitle(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SlideTitle, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Carousel Slide Title
		///</summary>
		[ImplementPropertyType("carouselSlideTitle")]
		public string CarouselSlideTitle
		{
			get { return GetCarouselSlideTitle(this); }
		}

		/// <summary>Static getter for Carousel Slide Title</summary>
		public static string GetCarouselSlideTitle(ISlideTitle that) { return that.GetPropertyValue<string>("carouselSlideTitle"); }
	}

	// Mixin content Type 1125 with alias "slideSubTitle"
	/// <summary>Slide Sub Title</summary>
	public partial interface ISlideSubTitle : IPublishedContent
	{
		/// <summary>Carousel Slide Sub Title</summary>
		string CarouselSlideSubTitle { get; }
	}

	/// <summary>Slide Sub Title</summary>
	[PublishedContentModel("slideSubTitle")]
	public partial class SlideSubTitle : PublishedContentModel, ISlideSubTitle
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "slideSubTitle";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SlideSubTitle(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SlideSubTitle, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Carousel Slide Sub Title
		///</summary>
		[ImplementPropertyType("carouselSlideSubTitle")]
		public string CarouselSlideSubTitle
		{
			get { return GetCarouselSlideSubTitle(this); }
		}

		/// <summary>Static getter for Carousel Slide Sub Title</summary>
		public static string GetCarouselSlideSubTitle(ISlideSubTitle that) { return that.GetPropertyValue<string>("carouselSlideSubTitle"); }
	}

	// Mixin content Type 1126 with alias "slideImage"
	/// <summary>Slide Image</summary>
	public partial interface ISlideImage : IPublishedContent
	{
		/// <summary>Carousel Slide Image</summary>
		IPublishedContent CarouselSlideImage { get; }
	}

	/// <summary>Slide Image</summary>
	[PublishedContentModel("slideImage")]
	public partial class SlideImage : PublishedContentModel, ISlideImage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "slideImage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SlideImage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SlideImage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Carousel Slide Image
		///</summary>
		[ImplementPropertyType("carouselSlideImage")]
		public IPublishedContent CarouselSlideImage
		{
			get { return GetCarouselSlideImage(this); }
		}

		/// <summary>Static getter for Carousel Slide Image</summary>
		public static IPublishedContent GetCarouselSlideImage(ISlideImage that) { return that.GetPropertyValue<IPublishedContent>("carouselSlideImage"); }
	}

	// Mixin content Type 1131 with alias "carouselControls"
	/// <summary>Carousel Controls</summary>
	public partial interface ICarouselControls : IPublishedContent
	{
		/// <summary>Main Carousel</summary>
		IEnumerable<IPublishedContent> MainCarousel { get; }
	}

	/// <summary>Carousel Controls</summary>
	[PublishedContentModel("carouselControls")]
	public partial class CarouselControls : PublishedContentModel, ICarouselControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "carouselControls";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CarouselControls(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CarouselControls, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Main Carousel
		///</summary>
		[ImplementPropertyType("mainCarousel")]
		public IEnumerable<IPublishedContent> MainCarousel
		{
			get { return GetMainCarousel(this); }
		}

		/// <summary>Static getter for Main Carousel</summary>
		public static IEnumerable<IPublishedContent> GetMainCarousel(ICarouselControls that) { return that.GetPropertyValue<IEnumerable<IPublishedContent>>("mainCarousel"); }
	}

	/// <summary>Carousel Slide</summary>
	[PublishedContentModel("carouselSlide")]
	public partial class CarouselSlide : PublishedContentModel, ISlideImage, ISlideSubTitle, ISlideTextPosition, ISlideTitle
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "carouselSlide";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CarouselSlide(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CarouselSlide, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Carousel Slide Image
		///</summary>
		[ImplementPropertyType("carouselSlideImage")]
		public IPublishedContent CarouselSlideImage
		{
			get { return Umbraco.Web.PublishedContentModels.SlideImage.GetCarouselSlideImage(this); }
		}

		///<summary>
		/// Carousel Slide Sub Title
		///</summary>
		[ImplementPropertyType("carouselSlideSubTitle")]
		public string CarouselSlideSubTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SlideSubTitle.GetCarouselSlideSubTitle(this); }
		}

		///<summary>
		/// Carousel Slide Text Position: Text over slide position i.e. Center, Bottom-Left, Bottom-Right, Top-Left, Top-Right
		///</summary>
		[ImplementPropertyType("carouselSlideTextPosition")]
		public string CarouselSlideTextPosition
		{
			get { return Umbraco.Web.PublishedContentModels.SlideTextPosition.GetCarouselSlideTextPosition(this); }
		}

		///<summary>
		/// Carousel Slide Title
		///</summary>
		[ImplementPropertyType("carouselSlideTitle")]
		public string CarouselSlideTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SlideTitle.GetCarouselSlideTitle(this); }
		}
	}

	// Mixin content Type 1137 with alias "slideTextPosition"
	/// <summary>Slide Text Position</summary>
	public partial interface ISlideTextPosition : IPublishedContent
	{
		/// <summary>Carousel Slide Text Position</summary>
		string CarouselSlideTextPosition { get; }
	}

	/// <summary>Slide Text Position</summary>
	[PublishedContentModel("slideTextPosition")]
	public partial class SlideTextPosition : PublishedContentModel, ISlideTextPosition
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "slideTextPosition";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SlideTextPosition(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SlideTextPosition, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Carousel Slide Text Position: Text over slide position i.e. Center, Bottom-Left, Bottom-Right, Top-Left, Top-Right
		///</summary>
		[ImplementPropertyType("carouselSlideTextPosition")]
		public string CarouselSlideTextPosition
		{
			get { return GetCarouselSlideTextPosition(this); }
		}

		/// <summary>Static getter for Carousel Slide Text Position</summary>
		public static string GetCarouselSlideTextPosition(ISlideTextPosition that) { return that.GetPropertyValue<string>("carouselSlideTextPosition"); }
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public string UmbracoFile
		{
			get { return this.GetPropertyValue<string>("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}
